lerna(verbose) GitUtilities.isInitialized    ()
lerna(verbose) GitUtilities.isInitialized    () => true
lerna(verbose) GitUtilities.getTopLevelDirectory()
lerna(verbose) GitUtilities.getTopLevelDirectory() => "/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch"
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/lerna.json")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/lerna.json") => true
lerna(verbose) FileSystemUtilities.readFileSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/lerna.json")
lerna(verbose) FileSystemUtilities.readFileSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/lerna.json") => "{\n  \"lerna\": \"2.0.0-beta.38\",\n  \"commands\": {\n    \"publish\": {\n      \"ignore\": [\n        \"example/**\",\n        \"test/**\"\n      ]\n    }\n  },\n  \"packages\": [\n    \"packages/*\"\n  ],\n  \"version\": \"independent\"\n}"
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/package.json")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/package.json") => true
lerna(verbose) FileSystemUtilities.readFileSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/package.json")
lerna(verbose) FileSystemUtilities.readFileSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/package.json") => "{\n  \"private\": true,\n  \"name\": \"ngx-elasticsearch\",\n  \"version\": \"0.1.0\",\n  \"description\": \"Elasticsearch components for angular\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"@angular/animations\": \"^4.0.0-rc.6\",\n    \"@angular/common\": \"~4.0.0-rc.5\",\n    \"@angular/compiler\": \"~4.0.0-rc.5\",\n    \"@angular/compiler-cli\": \"^4.0.0-rc.5\",\n    \"@angular/core\": \"~4.0.0-rc.5\",\n    \"@angular/platform-browser\": \"~4.0.0-rc.5\",\n    \"@angular/platform-browser-dynamic\": \"~4.0.0-rc.5\",\n    \"@angular/platform-server\": \"~4.0.0-rc.5\",\n    \"@types/jasmine\": \"^2.5.40\",\n    \"@types/jasmine-ajax\": \"^3.1.32\",\n    \"chalk\": \"^1.1.1\",\n    \"commitizen\": \"^2.9.5\",\n    \"conventional-changelog\": \"1.1.0\",\n    \"conventional-changelog-cli\": \"1.2.0\",\n    \"copy-webpack-plugin\": \"^4.0.1\",\n    \"core-js\": \"^2.4.1\",\n    \"css-loader\": \"^0.23.1\",\n    \"cz-conventional-changelog\": \"^1.2.0\",\n    \"cz-customizable\": \"4.0.0\",\n    \"express\": \"^4.13.4\",\n    \"file-loader\": \"^0.8.5\",\n    \"html-loader\": \"^0.4.5\",\n    \"imports-loader\": \"^0.6.5\",\n    \"istanbul\": \"^0.4.2\",\n    \"istanbul-instrumenter-loader\": \"^0.2.0\",\n    \"jasmine-core\": \"^2.3.4\",\n    \"js-beautify\": \"^1.5.10\",\n    \"json-loader\": \"^0.5.4\",\n    \"karma\": \"^0.13.21\",\n    \"karma-coverage\": \"^0.5.4\",\n    \"karma-coveralls\": \"^1.1.2\",\n    \"karma-jasmine\": \"^0.3.6\",\n    \"karma-jasmine-diff-reporter\": \"^0.3.4\",\n    \"karma-junit-reporter\": \"^0.3.8\",\n    \"karma-phantomjs-launcher\": \"^1.0.0\",\n    \"karma-sourcemap-loader\": \"^0.3.6\",\n    \"karma-webpack\": \"^1.7.0\",\n    \"lerna\": \"2.0.0-beta.38\",\n    \"method-override\": \"^2.3.5\",\n    \"node-static\": \"^0.7.7\",\n    \"null-loader\": \"^0.1.1\",\n    \"phantomjs-polyfill\": \"0.0.2\",\n    \"phantomjs-prebuilt\": \"^2.1.4\",\n    \"postcss-loader\": \"^0.8.2\",\n    \"protractor\": \"^4.0.0\",\n    \"rxjs\": \"^5.2.0\",\n    \"serve-favicon\": \"^2.3.0\",\n    \"sinon\": \"^1.17.2\",\n    \"style-loader\": \"^0.13.0\",\n    \"ts-loader\": \"^1.3.3\",\n    \"ts-node\": \"2.0.0\",\n    \"tslint\": \"4.4.2\",\n    \"typescript\": \"2.2.1\",\n    \"typings\": \"2.1.0\",\n    \"validate-commit-msg\": \"^2.11.1\",\n    \"webpack\": \"^2.2.1\",\n    \"webpack-config\": \"^4.0.0\",\n    \"webpack-dev-server\": \"^2.4.2\",\n    \"webpack-hot-middleware\": \"^2.9.1\",\n    \"zone.js\": \"^0.8.5\"\n  },\n  \"author\": \"Nicholas Mitchell\",\n  \"license\": \"MIT\"\n}"
lerna(info)    Lerna v2.0.0-beta.38
lerna(info)    Independent Versioning Mode
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/package.json")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/package.json") => true
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/lerna.json")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/lerna.json") => true
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/VERSION")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/VERSION") => false
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/packages/core/package.json")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/packages/core/package.json") => true
lerna(verbose) FileSystemUtilities.existsSync("./package.json")
lerna(verbose) FileSystemUtilities.existsSync("./package.json") => true
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/packages/search-box/package.json")
lerna(verbose) FileSystemUtilities.existsSync("/Users/nicholas.mitchell/Code/appz/ngx-elasticsearch/packages/search-box/package.json") => true
lerna(verbose) Attempting running BootstrapCommand.initialize
lerna(verbose) Successfully ran BootstrapCommand.initialize
lerna(verbose) Attempting running BootstrapCommand.execute
lerna(info)    Bootstrapping 3 packages
lerna(info)    Preinstalling packages
lerna(info)    Installing external dependencies
lerna(verbose) NpmUtilities.installInDir     (".", ["zone.js@^0.8.4"], {})
lerna(verbose) FileSystemUtilities.rename    ("./package.json", "./package.json.lerna_backup")
lerna(verbose) FileSystemUtilities.rename    ("./package.json", "./package.json.lerna_backup") => 
lerna(verbose) FileSystemUtilities.writeFile ("./package.json", "{\"dependencies\":{\"zone.js\":\"^0.8.4\"}}")
lerna(verbose) FileSystemUtilities.writeFile ("./package.json", "{\"dependencies\":{\"zone.js\":\"^0.8.4\"}}") => 
lerna(verbose) FileSystemUtilities.renameSync("./package.json.lerna_backup", "./package.json")
lerna(verbose) FileSystemUtilities.renameSync("./package.json.lerna_backup", "./package.json") => 
lerna(error)   NpmUtilities.installInDir     (".", ["zone.js@^0.8.4"], {})
    Command exited with status 1: npm install
lerna(error)   Errored while running BootstrapCommand.execute
